(module jazz.project.workbench.Workbench-Manager jazz
  (import (jazz.catalog))
  (import (jazz.designer))
  (import (jazz.designer.menu))
  (import (jazz.doc))
  (import (jazz.git))
  (import (jazz.git.ui))
  (import (jazz.graphic))
  (import (jazz.groupware))
  (import (jazz.io))
  (import (jazz.jml))
  (import (jazz.library))
  (import (jazz.library.component))
  (import (jazz.library.template))
  (import (jazz.project))
  (import (jazz.system))
  (import (jazz.system.process))
  (import (jazz.ui))
  (import (jazz.ui.dialog))
  (import (jazz.ui.view))
  (class Workbench-Manager extends Component-Editor implements Exit-Listener
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms))
    (method meta protected override (external-name . rest))
    (method meta protected override (host-icon))
    (method meta protected override (host-title))
    (method protected override (install-in-host host))
    (method protected override (get-tools-view))
    (method protected override (focus-default))
    (method protected final (get-tree))
    (method protected override (new-document-controller))
    (method protected override (install rest))
    (method protected override (get-designer-class))
    (method protected override (prepare-exit))
    (method protected override (on-designer evt))
    (method protected final (child-add child parent))
    (method protected final (child-remove child))
    (method protected override (key-press evt))
    (method protected final (on-highlight-document evt))
    (method protected final (on-reload-workbench evt))
    (method protected final (on-add-project evt))
    (method protected final (on-add-document evt))
    (method protected final (on-add-group evt))
    (method protected final (on-install-project evt))
    (method protected final (on-import-files evt))
    (method protected final (on-import-directory evt))
    (method protected final (on-synchronize-content evt))
    (method protected final (on-set-current-directory evt))
    (method protected final (on-update-catalog evt))
    (method protected final (on-update-dynamic evt))
    (method protected final (on-search-project evt))
    (method protected final (on-explore-depot evt))
    (method protected final (on-edit-project evt))
    (method protected final (on-edit-descriptor evt))
    (method protected final (on-edit-documentation evt))
    (method protected final (on-activate evt))
    (method protected final (on-run evt))
    (method protected final (on-debug evt))
    (method protected final (on-launch evt))
    (method protected final (on-distribute evt))
    (method protected final (on-properties evt))
    (method protected final (highlight-document))
    (method protected final (highlight-document-component component))
    (method public final (select-current))
    (method protected final (select-project))
    (method public final (edit-current))
    (method protected final (edit-selection))
    (method protected final (edit-workbench))
    (method protected final (edit-project project))
    (method protected final (edit-descriptor))
    (method protected final (edit-documentation))
    (method protected final (add-project))
    (method protected final (add-project-to parent))
    (method protected final (add-document))
    (method protected final (add-group))
    (method protected final (install-project file parent descendant?))
    (method protected final (import-directory current-directory?))
    (method protected final (import-files current-directory?))
    (method protected final (import-pathnames project pathnames parent))
    (method protected final (import-pathname project pathname parent descendant? (filter: filter (unspecified)) (recursive?: recursive? (unspecified))))
    (method protected final (import-content project dir parent descendant? (filter: filter (unspecified)) (recursive?: recursive? (unspecified))))
    (method protected final (default-import-directory object (must-exist?: must-exist? (unspecified))))
    (method protected final (with-import-directory current-directory? object proc))
    (method protected final (ascendant-project component))
    (method protected final (synchronize-content))
    (method protected final (validate-pathnames project pathnames))
    (method protected final (validate iterate))
    (method package final (set-project-active? project flag))
    (method public final (activate-selection))
    (method protected final (activate-object object))
    (method protected final (activate-project project (traits: traits (unspecified))))
    (method protected final (activate-descendant project active-project active-traits))
    (method protected final (update-dynamic-dependencies))
    (method protected final (update-catalog))
    (method protected final (update-project-catalog project))
    (method protected final (update-project-catalogs project))
    (method protected final (search-project))
    (method protected final (explore-depot))
    (method public final (configure-current))
    (method protected final (update-project-title project))
    (method public final (run-current))
    (method public final (run-selection))
    (method protected final (run-project project))
    (method public final (debug-current (executable: executable (unspecified))))
    (method public final (debug-selection))
    (method protected final (debug-project project (executable: executable (unspecified))))
    (method public final (test-current))
    (method public final (validate-current (executable: executable (unspecified))))
    (method public final (validate-selection))
    (method protected final (validate-project project (executable: executable (unspecified))))
    (method public final (launch-selection))
    (method protected final (on-build-current evt))
    (method public final (build-current))
    (method protected final (build-project project))
    (method public final (compile-current))
    (method public final (compile-moniker moniker))
    (method protected final (compile-file moniker project-file))
    (method public final (preprocess-current))
    (method public final (clean-current))
    (method protected final (clean-project project))
    (method protected final (on-distribute-current evt))
    (method public final (distribute-current))
    (method protected final (distribute-selection))
    (method protected final (distribute-project project))
    (method protected final (selected-object))
    (method protected final (selected-objects))
    (method protected final (selected-project))
    (method protected final (selected-concrete-project))
    (method protected final (current-project))
    (method public final (new-menu))
    (method protected final (describe-state pos)))
  (class Workbench-Manager-Controller extends Component-Editor-Controller
    (method protected override (document-status)))
  (class Group-Menu extends Component-Menu
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms)))
  (class Project-Menu extends Component-Menu
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms)))
  (class Concrete-Project-Menu extends Project-Menu
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms)))
  (class Workbench-Menu extends Project-Menu
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms)))
  (class Element-Menu extends Component-Menu
    (method meta protected override (set-class-form form))
    (method meta protected override (get-class-form))
    (method meta protected override (get-class-forms))))
