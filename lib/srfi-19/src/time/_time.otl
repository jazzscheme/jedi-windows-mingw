(module time jazz
  (export (time.exports))
  (import (time.exports))
  (definition public (make-default-date))
  (definition public (make-default-time))
  (definition public (collect-date-values args))
  (definition public (collect-time-values args))
  (class Time-Class extends Class)
  (class Time metaclass Time-Class extends Object
    (method protected override (print output readably))
    (method protected override (compare-object target)))
  (class Date-Class extends Class)
  (class Date metaclass Date-Class extends Object
    (method protected override (print output readably))
    (method protected override (compare-object target)))
  (definition public (system-date))
  (definition public (time->seconds time))
  (definition public (seconds->time seconds))
  (definition public (date-universal->local date))
  (definition public (date-local->universal date))
  (definition public (parse-date-day date))
  (definition public (parse-date-time date))
  (definition public (parse-date-day-french date))
  (definition public (present-date date))
  (definition public (present-date-day date))
  (definition public (present-date-time date))
  (definition public (present-date-day-french date))
  (definition public (present-date-hour date))
  (definition public (date= d1 d2))
  (definition public (date-add date count type)))
