(module jazz.log jazz
  (import (jazz.io))
  (import (jazz.jml))
  (class Log extends Object
    (slot name getter generate)
    (slot file getter generate)
    (slot last-mark)
    (slot read-error?)
    (slot current-node getter generate)
    (slot toplevel-nodes)
    (slot keep-nodes?)
    (method protected override (initialize (name: name (unspecified)) (file: file (unspecified)) (load?: load? (unspecified)) (keep-nodes?: keep-nodes? (unspecified))))
    (method protected override (print output readably))
    (method public final (get-toplevel-nodes))
    (method public final (reload))
    (method protected final (load-toplevel-nodes))
    (method protected final (add-toplevel-node node))
    (method protected final (output-toplevel-node node))
    (method public final (with-node node proc))
    (method public final (log-node node))
    (method public final (log-entry tag name message (class: class (unspecified)) (data: data (unspecified)) (location: location (unspecified)) (properties: properties (unspecified))))
    (method public final (new-entry tag name message (class: class (unspecified)) (data: data (unspecified)) (location: location (unspecified)) (properties: properties (unspecified))))
    (method public final (clear)))
  (definition package (get-logs))
  (definition package (timestamped-log (prefix (unspecified))))
  (definition package (add-log log))
  (definition package (effective-log))
  (definition public current-log)
  (definition public (with-log log thunk (name: name (unspecified)) (file: file (unspecified))))
  (definition public (with-node proc (node: node (unspecified)) (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (log-node node (log: log (unspecified))))
  (definition public (log-entry (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (log-properties properties (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified))))
  (definition public (new-log-node (tag: tag (unspecified)) (name: name (unspecified)) (message: message (unspecified)) (data: data (unspecified)) (log: log (unspecified)))))
