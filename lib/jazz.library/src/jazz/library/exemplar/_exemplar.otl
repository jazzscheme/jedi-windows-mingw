(module jazz.library.exemplar jazz
  (import (jazz.library))
  (class Exemplar extends Object
    (slot protected domain)
    (slot protected base)
    (slot protected ascendants)
    (method protected override (initialize . rest))
    (method protected virtual (initialize-attributes attributes))
    (method protected override (copy-object deep?))
    (method protected override (compare-object target))
    (method protected override (print output readably))
    (method public final (present))
    (method protected virtual (present-attribute attribute value))
    (method public final (inherits? name/target))
    (method public final (for-each-ascendant proc))
    (method public final (extend . rest))
    (method public final (modify-from from))
    (method protected virtual (default-domain))
    (method public final (get-domain))
    (method public final (set-domain d))
    (method public final (intern))
    (method public final (get-base))
    (method public final (set-base b))
    (method public final (get-ascendants))
    (method protected final (reset-ascendants))
    (method public final (supports? attribute))
    (method protected virtual (get-attributes))
    (method protected virtual (get-attribute-default attribute))
    (method protected virtual (get-attribute-no-default attribute))
    (method protected virtual (get-attribute attribute))
    (method protected virtual (set-attribute attribute value))
    (method protected virtual (attribute=? attribute x y))
    (method protected final (attribute/unspecified=? attribute x y))
    (method public virtual (get attribute))
    (method public virtual (set attribute value)))
  (definition public (construct-exemplar class rest))
  (definition public (parse-exemplar class string))
  (definition public (register-exemplar name exemplar domain))
  (definition public (exemplar+=? x y))
  (definition public (exemplar=? e1 <Exemplar> e2 <Exemplar>) <bool>)
  (definition public (exemplar-hash e <Exemplar>))
  (class Exemplar-Domain extends Object
    (slot name)
    (slot initer)
    (slot index)
    (slot interned)
    (slot chained)
    (method protected override (initialize (name: name (unspecified)) (initer: initer (unspecified)) (intern?: intern? (unspecified)) (chained: chained (unspecified))))
    (method protected override (print output readably))
    (method public final (register name exemplar))
    (method public final (reference rank/name))
    (method protected final (init))
    (method public final (get-index))
    (method public final (locate-own name (error?: error? (unspecified))))
    (method public final (locate name (error?: error? (unspecified))))
    (method public final (symbolize target (test: test (unspecified))))
    (method public final (get-interned))
    (method public final (set-interned value))
    (method public final (empty-interned))
    (method public final (intern exemplar))
    (method public final (get-rank exemplar))
    (method public final (get-chained))))
