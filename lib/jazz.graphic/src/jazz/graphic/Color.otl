(module jazz.graphic.Color jazz
  (import (jazz.graphic))
  (import (jazz.library.exemplar))
  (class Color extends Exemplar
    (slot _red)
    (slot _green)
    (slot _blue)
    (slot _alpha)
    (method protected override (get-attributes))
    (method protected override (get-attribute #:attr^2))
    (method protected override (set-attribute #:attr^2 #:val^3))
    (method protected override (get-attribute-default #:attr^2))
    (method protected override (get-attribute-no-default #:attr^2))
    (method protected override (attribute=? #:attr^2 x y))
    (method protected override (get #:attr^2))
    (method protected override (set #:attr^2 #:val^3))
    (method public final (get-red))
    (method public final (set-red #:val^3))
    (method public final (get-green))
    (method public final (set-green #:val^3))
    (method public final (get-blue))
    (method public final (set-blue #:val^3))
    (method public final (get-alpha))
    (method public final (set-alpha #:val^3))
    (method protected override (initialize-attributes attributes))
    (method protected override (present-attribute attribute value))
    (method protected override (default-domain))
    (method public final (white?))
    (method public final (->rbg))
    (method public final (->red/green/blue))
    (method public final (determine-color enabled? selected?))
    (method public final (get-opposite))))
