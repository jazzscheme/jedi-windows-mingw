(module jazz.graphic jazz
  (export (jazz.graphic.syntax))
  (export (jazz.graphic.autoload))
  (import (jazz.graphic.autoload))
  (import (jazz.geometry))
  (import (jazz.library.exemplar))
  (import (jazz.system))
  (definition public validate-transform?)
  (definition public default-resolution)
  (definition public (colors-domain))
  (definition public (register-color name color))
  (definition public (registered-color name (alpha (unspecified))))
  (definition public (symbolic-colors))
  (definition public (symbolic-color color))
  (definition public (symbolize-color color (epsilon: epsilon (unspecified))))
  (definition public (for-each-color proc))
  (definition public (color=? x y))
  (definition public (color-similar? x y))
  (definition public (color-epsilon-similar? x y epsilon))
  (definition public (rgb->hsv r <fl> g <fl> b <fl>))
  (definition public (hsv->rgb h <fl> s <fl> v <fl>))
  (definition public (color->rgb color))
  (definition public (color->hsv color))
  (definition public (rgb->color r <fl> g <fl> b <fl>))
  (definition public (hsv->color h <fl> s <fl> v <fl>))
  (definition public (lighten color percentage))
  (definition public (darken color percentage))
  (definition public (soften color percentage))
  (definition public (harden color percentage))
  (definition public (color-cycle base cycle subcycle))
  (definition public (get-font-engine))
  (definition public (fonts-domain))
  (definition public (register-font name font))
  (definition public (registered-font name))
  (definition public (symbolic-fonts))
  (definition public (symbolic-font font))
  (definition public (for-each-font proc))
  (definition public (font=? x y))
  (definition public (copy-region region <Region>) <Region>)
  (definition public (region-union x <Region> y <Region>) <Region>)
  (definition public (region-intersection x <Region> y <Region>) <Region>)
  (definition public (region-difference x <Region> y <Region>) <Region>)
  (definition public debug-paint?)
  (definition public debug-painting?))
