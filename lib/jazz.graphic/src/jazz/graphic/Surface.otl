(module jazz.graphic.Surface jazz
  (import (jazz.geometry))
  (import (jazz.graphic))
  (import (jazz.graphic.image))
  (import (jazz.io))
  (import (jazz.library))
  (import (jazz.platform))
  (import (jazz.platform.cairo))
  (class Surface extends Object
    (slot handle getter generate)
    (slot context getter generate)
    (slot font <Font>)
    (slot glyph-array)
    (slot glyph-array-length <fx>)
    (method protected override (initialize handle . rest))
    (method protected override (destroy))
    (method protected final (destroy-glyph-array))
    (method protected final (destroy-surface))
    (method protected final (destroy-context))
    (method public final (cairo-finish))
    (method public virtual (painting-tree-algorithm))
    (method public final (logical->device shape <Object>))
    (method public final (device->logical shape <Object>))
    (method public final (with-preserved-matrix thunk <procedure>))
    (method public final (debug-matrix))
    (method public final (with-transformation h <fx> v <fx> transformation <foreign+> thunk <procedure>))
    (method public final (with-pristine-transformation thunk <procedure>))
    (method public final (with-clipping-transformation h <fx> v <fx> width <fx> height <fx> transformation <foreign+> thunk <procedure>))
    (method public final (with-pristine-clipping-transformation thunk <procedure>))
    (method public final (get-clipper) <Rect>)
    (method public final (set-clipper rect <Rect>))
    (method public final (clip rect <Rect>))
    (method public final (with-preserved-clipper thunk <procedure>))
    (method public final (with-clip clip-rect <Rect> thunk <procedure>))
    (method public final (set-text-color color <Color>))
    (method public final (get-char-width n <fx>))
    (method public final (get-char-widths (first: first (unspecified)) (last: last (unspecified))))
    (method public final (get-text-extent text <string>))
    (method public final (get-font-height))
    (method public final (get-text-metrics))
    (method public final (get-text-width text <string>) <fx>)
    (method public final (draw-text h <fx> v <fx> str <string> color <Color> (shadow-color: shadow-color (unspecified)) (enabled?: enabled? (unspecified))))
    (method public final (draw-tabbed-text h <fx> v <fx> str <Sequence> tabs origin <fx> color <Color> highlight-color <Color+>) <fx>)
    (method public final (fill-region region <Cairo-Region> color))
    (method public final (gradient-fill bounds <Rect> stops (direction: direction (unspecified))))
    (method public final (gradient-fill-rect rect <Rect> stops (direction: direction (unspecified))))
    (method public final (ellipse rect <Rect> outside inside))
    (method public final (draw-surface handle x y))
    (method public final (fill-background rect background))
    (method public final (fill-gradient rect <Rect> gradient <Gradient>))
    (method public final (fill-texture rect <Rect> texture <Texture>))
    (method public final (fill-image rect <Rect> image <Image> (mode: mode (unspecified)) (position: position (unspecified)) (size: size (unspecified))))
    (method public final (draw-scroll-bar rect <Rect> direction))
    (method public final (draw-caption rect <Rect> type (pushed? (unspecified)) (in-rectangle? (unspecified))))
    (method public final (draw-radio-button rect <Rect> (radio-background: radio-background (unspecified)) (inactive?: inactive? (unspecified)) (selected?: selected? (unspecified))))
    (method public final (draw-push-button rect <Rect> (pushed? (unspecified))))
    (method public final (set-source-surface surface/handle x y))
    (method public final (blit-surface surface (destination: destination (unspecified))))
    (method public final (blit-surface-ext surface h v width height destination-h destination-v))
    (method public final (set-font font <Font>))
    (method public final (set-style style))
    (method public final (draw-edge rect <Rect> (edges: edges (unspecified)) (inner: inner (unspecified)) (outer: outer (unspecified))))
    (method public final (fill-rect rect <Rect> color <Color>))
    (method public final (fill-insets rect <Rect> insets <Rect> color <Color>))
    (method public final (draw-check h <fx> v <fx>))
    (method public final (draw-raised rect <Rect>))
    (method public final (draw-arrow-tip h v size <fx> direction <symbol>))
    (method public virtual (show-page))
    (method protected final (with-outside/inside outside inside outside-proc inside-proc))
    (method public virtual (frame-rect rect <Rect> color))
    (method public final (frame-partial-rect rect <Rect> sides color))
    (method public final (frame-round-rect rect <Rect> color))
    (method public final (rectangle rect <Rect> outside inside))
    (method public final (cairo-move-to h v))
    (method public final (cairo-line-to h v))
    (method public final (arc hc vc radius angle1 angle2))
    (method public final (arc-negative hc vc radius angle1 angle2))
    (method public final (curve-to-relative dx1 dy1 dx2 dy2 dx3 dy3))
    (method public final (close-path))
    (method public final (get-source))
    (method public final (set-source pattern))
    (method public final (translate th tv))
    (method public final (scale sh sv))
    (method public final (rotate angle))
    (method public final (move-to h v))
    (method public final (line-path h v))
    (method public final (line-to h v))
    (method public final (line-to-preserve h v))
    (method public final (line-to-no-stroke h v))
    (method public final (line-to-rel dh dv))
    (method public final (move-to-rel dh dv))
    (method public final (line h v dest-h dest-v))
    (method public final (pixel-to h v))
    (method public final (set-line-width w))
    (method public final (get-line-width))
    (method public final (get-operator))
    (method public final (set-operator op))
    (method public final (get-antialias))
    (method public final (set-antialias antialias))
    (method public final (stroke))
    (method public final (stroke-preserve))
    (method public final (fill))
    (method public final (fill-preserve))
    (method public final (paint))
    (method public final (clear))
    (method public final (draw-rectangle rect <Rect>))
    (method public final (draw-rectangle$fl$ rect <Rect$fl$>))
    (method public final (set-color color <Color>))
    (method public final (export-to-png file <File>))
    (method public final (cairo-status))
    (method public final (cairo-surface-status))))
