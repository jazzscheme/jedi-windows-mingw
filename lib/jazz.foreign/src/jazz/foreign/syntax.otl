(module jazz.foreign.syntax jazz
  (import (jazz.core (phase syntax)))
  (import (jazz.dialect.classes.foundation))
  (class C-Include extends Expression
    (slot name getter generate)
    (method protected override (initialize name . rest))
    (method protected override (emit-expression declaration environment backend)))
  (class C-Initialize extends Expression
    (slot name getter generate)
    (slot code getter generate)
    (method protected override (initialize name code . rest))
    (method protected override (emit-expression declaration environment backend)))
  (class C-Declare extends Expression
    (slot name getter generate)
    (slot code getter generate)
    (method protected override (initialize name code . rest))
    (method protected override (emit-expression declaration environment backend)))
  (class C-Named-Declare-Declaration extends Declaration
    (slot code getter generate)
    (method protected override (initialize . rest))
    (method protected override (emit-declaration environment backend))
    (method protected override (expand-referenced-declaration))
    (method protected override (outline-extract meta)))
  (class C-Type-Declaration extends Declaration
    (slot form getter generate)
    (slot kind getter generate)
    (slot expansion getter generate)
    (slot base-type getter generate)
    (slot pointer-types accessors generate)
    (slot inclusions getter generate)
    (slot c-to-scheme getter generate)
    (slot scheme-to-c getter generate)
    (slot cleanup getter generate)
    (slot declare-name getter generate)
    (method protected override (initialize form . rest))
    (method protected override (get-declaration-inclusions))
    (method protected override (emit-declaration environment backend))
    (method protected override (expand-referenced-declaration))
    (method protected override (outline-extract meta)))
  (syntax public c-structure)
  (syntax public c-union)
  (macro public (c-enumerant name (type (unspecified))))
  (class C-Code extends Expression
    (slot expansion getter generate)
    (method protected override (initialize expansion . rest))
    (method protected override (emit-expression declaration environment backend)))
  (class C-Function extends Expression
    (slot expansion getter generate)
    (method protected override (initialize expansion . rest))
    (method protected override (emit-expression declaration environment backend)))
  (class C-Definition-Declaration extends Declaration
    (slot signature accessors generate)
    (slot parameter-types getter generate)
    (slot result-type getter generate)
    (slot c-name getter generate)
    (slot scope getter generate)
    (slot body accessors generate)
    (method protected override (initialize . rest))
    (method protected override (walk-binding-validate-call walker resume source-declaration operator arguments form-src))
    (method protected override (emit-declaration environment backend))
    (method protected override (emit-binding-reference source-declaration environment backend))
    (method protected override (outline-extract meta)))
  (syntax public c-constant)
  (syntax public c-enumeration)
  (macro public (c-external signature result-type . rest))
  (syntax public com-external))
