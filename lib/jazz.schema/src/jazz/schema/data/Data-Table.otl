(module jazz.schema.data.Data-Table jazz
  (import (jazz.schema))
  (class Data-Table extends Data-Entity
    (slot request getter generate)
    (slot primary-key)
    (slot columns)
    (slot indexes)
    (slot triggers)
    (slot constraints)
    (slot rows accessors generate)
    (slot missing? accessors generate)
    (method protected override (initialize (owner: owner (unspecified)) (name: name (unspecified)) (parent: parent (unspecified)) (properties: properties (unspecified)) (request: request (unspecified)) (primary-key: primary-key (unspecified)) (columns: columns (unspecified)) (column-names: column-names (unspecified)) (indexes: indexes (unspecified)) (triggers: triggers (unspecified)) (constraints: constraints (unspecified)) (rows: rows (unspecified))))
    (method protected override (print output readably))
    (method protected final (print-schema output))
    (method protected override (get-kind))
    (method protected override (create kind name))
    (method protected override (add kind object))
    (method protected override (get-children))
    (method protected override (get-categorized-children))
    (method protected override (property-names))
    (method public final (get-primary-key))
    (method public final (set-primary-key value))
    (method public final (add-primary-key primary-key))
    (method public final (get-columns))
    (method public final (set-columns value))
    (method public final (get-columns-sql (prefix: prefix (unspecified))))
    (method public final (add-column column))
    (method public final (find-column name))
    (method public final (get-indexes))
    (method public final (set-indexes value))
    (method public final (add-index index))
    (method public final (get-triggers))
    (method public final (set-triggers value))
    (method public final (add-trigger trigger))
    (method public final (get-constraints))
    (method public final (set-constraints value))
    (method public final (add-constraint constraint))
    (method public final (get-count))
    (method public final (remove-row row))
    (method public final (remove-rows))
    (method public final (add-row row))
    (method public final (append-row row))
    (method public final (new-row (state: state (unspecified)) (values: values (unspecified))))
    (method public final (get-row rank))
    (method public final (load-request command connection (max-load: max-load (unspecified))))
    (method public final (find-row name value))
    (method public final (find-rows name value))
    (method public final (find-row-by predicate))
    (method public final (find-rows-by predicate))
    (method public final (filter! predicate))
    (method public final (sort-by name (ascending?: ascending? (unspecified))))))
