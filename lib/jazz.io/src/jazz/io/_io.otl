(module jazz.io jazz
  (import (time))
  (definition public (get-eol-encoding))
  (definition public (set-eol-encoding encoding))
  (definition public (path-settings pathname . rest))
  (class Alias extends Object
    (slot path getter generate)
    (slot parent accessors generate)
    (slot table getter generate)
    (method protected override (initialize path (parent: parent (unspecified))))
    (method protected override (print output readably))
    (method protected final (get-anchor))
    (method public final (get-children))
    (method public final (get-descendant-anchors))
    (method public final (get-anchors)))
  (class Unknown-Alias-Exception extends Exception
    (slot alias getter generate)
    (method protected override (initialize alias))
    (method protected override (get-message)))
  (definition public (get-aliases))
  (definition public (get-root-alias))
  (definition public (is-alias? name))
  (definition public (valid-alias? name))
  (definition public (get-alias name (error?: error? (unspecified))))
  (definition public (set-alias! name path))
  (definition public (find-alias name (root: root (unspecified)) (error?: error? (unspecified))))
  (definition protected (find-path-alias path root error?))
  (definition public (require-alias name))
  (definition protected (canonical-alias name root))
  (definition public (register-alias name path (root: root (unspecified)) (override?: override? (unspecified))))
  (definition public (unregister-alias name (root: root (unspecified))))
  (definition public (for-each-alias alias proc))
  (definition public initialize-aliases)
  (definition public (register-repository-aliases repository))
  (definition public (register-repository-alias repository))
  (definition public (register-resources-alias app-alias product-name))
  (definition public (extract-name filename <string>) <string>)
  (definition public (extract-base filename <string>))
  (definition public (extract-extension filename <string>))
  (definition public (filename=? x y))
  (definition public (extension=? x y))
  (definition public filename=?-hash)
  (definition public filename-test)
  (definition public filename-compare)
  (definition public (normalize-filename-separators filename <string>))
  (definition public (platform-filename filename <string>))
  (definition public (tokenise-filename filename <string>))
  (definition public (tokenise-windows filename <string>))
  (definition public (make-filename base extension))
  (definition public (different-times? time1 time2 (tolerance: tolerance (unspecified))))
  (definition public (different-file-times? file1 file2))
  (definition public (different-file-digests? file1 file2))
  (definition public (different-file-times/digests? file1 file2))
  (class Moniker-Class extends Class
    (method public virtual (get-protocol)))
  (class Moniker metaclass Moniker-Class extends Object
    (method public virtual (compare-pathname object))
    (method public virtual (present))
    (method public virtual (present-base))
    (method public virtual (present-name))
    (method public virtual (present-location))
    (method public virtual (exists?))
    (method public final (read-only?))
    (method public final (read/write?))
    (method public final (set-read-only))
    (method public final (set-read/write))
    (method public virtual (get-writable?))
    (method public virtual (set-writable? flag))
    (method public virtual (writable?))
    (method public virtual (get-modification-time))
    (method public virtual (get-file))
    (method public virtual (get-name))
    (method public virtual (get-base))
    (method public virtual (get-extension))
    (method public virtual (get-list))
    (method public virtual (get-parent))
    (method public final (get-hierarchy))
    (method public virtual (get-content . rest))
    (method public virtual (get-children . rest))
    (method public virtual (is-different? moniker))
    (method public final (relocated-list old-root new-root))
    (method public virtual (load-lines . rest))
    (method public virtual (save-lines lines . rest))
    (method public virtual (load-form)))
  (class Pathname-Class extends Moniker-Class)
  (class Pathname metaclass Pathname-Class extends Moniker
    (slot path)
    (slot context accessors generate)
    (method protected override (initialize lst))
    (method protected virtual (validate-components object))
    (method public final (parse . rest))
    (method public final (platform-parse))
    (method protected virtual (add-suffix output))
    (method public override (present-location))
    (method public final (relocated-pathname old-root new-root))
    (method public virtual (create))
    (method public final (move-pathname dst (error?: error? (unspecified))))
    (method protected override (compare-object target))
    (method protected override (compare-pathname object))
    (method public final (context-alias?))
    (method public final (pathname-alias? alias))
    (method public final (pathname-alias alias))
    (method public final (expand))
    (method public final (expand-context))
    (method protected override (get-list))
    (method public final (set-list value))
    (method protected override (get-name))
    (method protected final (effective-name lst))
    (method protected override (get-base))
    (method protected override (get-extension))
    (method protected override (get-parent))
    (method public final (get-brother name))
    (method public virtual (new-brother name))
    (method public virtual (get-directory))
    (method public final (get-attributes (error?: error? (unspecified))))
    (method public final (set-attributes flags))
    (method protected override (get-writable?))
    (method protected override (set-writable? flag))
    (method protected override (exists?))
    (method protected final (is-directory?))
    (method public final (create-directories))
    (method public final (subpath target))
    (method public final (subpath? target))
    (method public final (anchor-to anchor (error?: error? (unspecified))))
    (method public final (anchorize (anchors: anchors (unspecified)) (ignored-anchors: ignored-anchors (unspecified))))
    (method protected override (setup-context toplevel-context)))
  (definition public (pathname? object))
  (definition public (pathname=? x <Moniker> y <Moniker>))
  (definition public (pathname-exists? pathname <Pathname>))
  (definition public (pathname-delete pathname <Pathname>))
  (definition public (pathname-modification-seconds pathname <Pathname>))
  (definition public (pathname-hash pathname <Pathname>))
  (class File-Class extends Pathname-Class
    (method protected override (get-protocol)))
  (class File metaclass File-Class extends Pathname
    (method protected override (print output readably))
    (method protected override (new-brother name))
    (method protected override (present))
    (method protected override (get-file))
    (method protected override (get-directory))
    (method protected override (create))
    (method public final (copy-times dst))
    (method public final (copy-file dst (overwrite?: overwrite? (unspecified)) (overwrite-read-only?: overwrite-read-only? (unspecified)) (preserve-times?: preserve-times? (unspecified)) (feedback: feedback (unspecified))))
    (method public final (install-file dst (feedback: feedback (unspecified))))
    (method public final (delete-file (overwrite-read-only?: overwrite-read-only? (unspecified)) (error?: error? (unspecified))))
    (method protected final (overwrite-read-only overwrite-read-only?))
    (method public final (get-size))
    (method protected override (get-modification-time))
    (method public final (set-modification-time time))
    (method public final (touch))
    (method public final (get-hidden?))
    (method public final (set-hidden? flag))
    (method protected override (writable?))
    (method public final (clone-file extension))
    (method protected override (load-lines (char-encoding: char-encoding (unspecified)) (char-encoding-errors: char-encoding-errors (unspecified))))
    (method protected override (save-lines lines (char-encoding: char-encoding (unspecified)) (eol-encoding: eol-encoding (unspecified)))))
  (definition public (file? object))
  (definition public (timestamped-file dir prefix ext))
  (class Directory-Class extends Pathname-Class
    (method protected override (get-protocol)))
  (class Directory metaclass Directory-Class extends Pathname
    (method protected override (print output readably))
    (method protected override (new-brother name))
    (method protected override (present))
    (method protected override (get-directory))
    (method protected override (get-modification-time))
    (method protected override (get-parent))
    (method protected override (create))
    (method public final (new-file name) <File>)
    (method public final (new-directory name) <Directory>)
    (method public final (new-unique-file name (separator: separator (unspecified))))
    (method protected final (add-context pathname))
    (method public final (copy-directory dst (overwrite?: overwrite? (unspecified)) (overwrite-read-only?: overwrite-read-only? (unspecified)) (copier: copier (unspecified)) (copy?: copy? (unspecified)) (preserve-times?: preserve-times? (unspecified)) (feedback: feedback (unspecified))))
    (method public final (install-directory dst (filter: filter (unspecified)) (feedback: feedback (unspecified)) (force-feedback?: force-feedback? (unspecified)) (progress-feedback: progress-feedback (unspecified))))
    (method public virtual (delete-directory (overwrite-read-only?: overwrite-read-only? (unspecified)) (feedback: feedback (unspecified))))
    (method public final (empty-directory (overwrite-read-only?: overwrite-read-only? (unspecified)) (feedback: feedback (unspecified))))
    (method public final (remove-directory))
    (method protected override (get-content (nodes?: nodes? (unspecified)) (leaves?: leaves? (unspecified))))
    (method protected override (add-suffix output))
    (method public final (collect-files predicate))
    (method public final (collect-directories))
    (method public final (count-directories))
    (method public virtual (iterate-directory proc (full?: full? (unspecified)) (files?: files? (unspecified)) (directories?: directories? (unspecified)) (sort?: sort? (unspecified)) (recursive?: recursive? (unspecified)) (ignored-toplevel-dirnames: ignored-toplevel-dirnames (unspecified)) (ignored-toplevel-filenames: ignored-toplevel-filenames (unspecified)) (ignored-dirnames: ignored-dirnames (unspecified))))
    (method public final (count-files (ignored-dirnames: ignored-dirnames (unspecified)) (filter: filter (unspecified)) (max-count: max-count (unspecified)))))
  (class Windows-Meta-Root extends Pathname
    (method protected override (initialize))
    (method protected override (get-name))
    (method protected override (present))
    (method protected override (get-parent))
    (method protected override (get-directory))
    (method protected override (exists?))
    (method protected override (get-content (nodes?: nodes? (unspecified)) (leaves?: leaves? (unspecified)))))
  (definition public (directory? obj))
  (definition public (digest-directory dir algorithm))
  (definition public (get-current-directory))
  (definition public (set-current-directory directory))
  (definition public (with-preserved-current-directory proc))
  (definition public Scheme-Extensions)
  (definition public Clojure-Extensions)
  (definition public CommonLisp-Extensions)
  (definition public Jazz-Extensions)
  (definition public Jazz-All-Extensions)
  (definition public Lisp-Extensions)
  (definition public C-Extensions)
  (definition public Java-Extensions)
  (definition public SQL-Extensions)
  (definition public Text-Extensions)
  (definition public Textual-Extensions)
  (definition public Binary-Extensions)
  (definition public (effective-extensions obj))
  (definition package (effective-include-extensions extensions))
  (definition package (effective-catalog-extensions extensions))
  (definition public (extension-constituent-test ext)))
