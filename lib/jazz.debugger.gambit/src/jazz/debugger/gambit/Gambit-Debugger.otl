(module jazz.debugger.gambit.Gambit-Debugger jazz
  (import (jazz.console))
  (import (jazz.debugger))
  (import (jazz.debugger.gambit))
  (import (jazz.system))
  (class Gambit-Debugger extends Debugger
    (method protected override (start-debugger))
    (method protected override (stop-debugger))
    (method protected override (get-processes (validate-liveness?: validate-liveness? (unspecified))))
    (method protected override (detach-processes))
    (method protected override (process=? x y))
    (method protected override (process-live? process))
    (method protected override (process-title process))
    (method protected override (process-icon process))
    (method protected override (process-threads process))
    (method protected override (present-process process))
    (method protected override (evaluate-expressions process syntax string container line col evaluation-mode walk-debugger walk-cookie))
    (method protected override (process-detach process))
    (method protected override (process-exit process))
    (method protected override (thread-name thread))
    (method protected override (thread-state thread))
    (method protected override (thread-stops thread))
    (method protected override (break-thread process thread))
    (method protected override (terminate-thread process thread preserve-console?))
    (method protected override (thread-debugged-continuation? thread))
    (method protected override (restart-stop process restart))
    (method protected override (stop-kind stop))
    (method protected override (stop-reason stop))
    (method protected override (stop-frames stop))
    (method protected override (continue-stop process stop))
    (method protected override (step-stop process stop command))
    (method protected override (frame-name frame))
    (method protected override (frame-location frame))
    (method protected override (frame-variables frame))
    (method protected override (frame-variable-name frame variable))
    (method protected override (frame-variable-value frame variable))))
