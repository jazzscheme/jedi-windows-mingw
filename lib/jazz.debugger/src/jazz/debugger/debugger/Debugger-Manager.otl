(module jazz.debugger.debugger.Debugger-Manager jazz
  (import (jazz.debuggee))
  (import (jazz.debugger))
  (import (jazz.graphic))
  (import (jazz.ide))
  (import (jazz.jrm))
  (import (jazz.media))
  (import (jazz.project))
  (import (jazz.system))
  (import (jazz.system.access))
  (import (jazz.ui))
  (import (jazz.ui.view))
  (definition public stopped-frame-color)
  (definition public visited-highlight-color)
  (class Debugger-Manager extends Object
    (slot active-stops)
    (slot unvisited-stops)
    (slot unzoomed-stops)
    (slot liveliness-cache)
    (slot evaluated-processes)
    (slot evaluate-when getter generate)
    (slot focused-mode? getter generate)
    (slot focused-process getter generate)
    (slot process getter generate)
    (slot thread getter generate)
    (slot frame getter generate)
    (method protected override (initialize))
    (method public final (debugging?))
    (method public final (selected-process))
    (method public final (selected-thread))
    (method public final (selected-frame))
    (method public final (visit-debugged debugged))
    (method public final (unzoom-debugged debugged))
    (method public final (update-status))
    (method public final (get-stopped-frame-color debugged))
    (method public final (get-visited-highlight-color debugged))
    (method protected final (debugged-stopped? debugged))
    (method protected final (debugged-visited? debugged))
    (method protected final (debugged-zoomed? debugged))
    (method public final (get-active-stops debugged))
    (method public final (process-evaluate-when process))
    (method public final (process-evaluate-never process))
    (method public final (process-evaluate-known process))
    (method public final (process-evaluate-always process))
    (method public final (toggle-focused-mode))
    (method public final (require-focused-process))
    (method public final (focus-process process))
    (method protected final (set-focused-process process))
    (method protected final (focused-process-update))
    (method public final (attach-process process focus?))
    (method public final (detach-process process))
    (method public final (for-each-process proc (live-test?: live-test? (unspecified))))
    (method public final (get-process-debugger target))
    (method public final (find-live-process process))
    (method public final (process-changed new-process))
    (method public final (get-alive? process))
    (method public final (set-alive? process alive?))
    (method public final (for-each-thread proc (detailed?: detailed? (unspecified))))
    (method public final (thread-changed new-thread (user-origin: user-origin (unspecified))))
    (method public final (for-each-frame proc))
    (method public final (frame-changed new-frame (user-origin: user-origin (unspecified))))
    (method public final (edit-frame frame (select?: select? (unspecified))))
    (method public final (register-stop process thread stop (step?: step? (unspecified))))
    (method public final (update-variables-zoom))
    (method public final (unregister-stop process thread stop))
    (method public final (filename-processes filename))
    (method public final (effective-filename-processes filename))
    (method public final (evaluation-filename-processes filename))
    (method public final (determine-focused-processes))
    (method protected final (remove-never-processes processes))
    (method protected final (collect-always-processes))
    (method public final (determine-filename-processes filename))
    (method public final (process-needs-filenames? process))
    (method public final (process-received-filenames? process))
    (method public final (evaluate-filename-expressions filename forms syntax str container line col evaluation-mode))
    (method public final (has-information? process))
    (method public final (determine-processes filter))))
