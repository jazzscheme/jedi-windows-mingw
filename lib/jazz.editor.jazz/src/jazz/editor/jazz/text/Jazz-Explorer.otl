(module jazz.editor.jazz.text.Jazz-Explorer jazz
  (require (jazz.editor.scheme.forms))
  (require (jazz.editor.jazz.forms))
  (import (jazz.editor.jazz))
  (import (jazz.editor.lisp))
  (import (jazz.editor.scheme))
  (import (jazz.ui))
  (class Jazz-Explorer extends Scheme-Explorer
    (method protected override (expression-comment? mark <Explorer-Mark>))
    (method public final (forward-location location <Object> (toplevel-location: toplevel-location (unspecified))))
    (method public final (namespace-declaration-range (include-invoices?: include-invoices? (unspecified))))
    (method public final (forward-namespace (include-invoices?: include-invoices? (unspecified))))
    (method protected final (forward-unit))
    (method protected final (forward-module include-invoices?))
    (method protected final (forward-submodule include-invoices?))
    (method protected final (forward-script include-invoices?))
    (method protected final (forward-class))
    (method protected final (forward-interface))
    (method protected final (forward-name))
    (method protected final (forward-keywords keywords))
    (method protected final (forward-invoices))
    (method protected final (forward-invoice))
    (method protected final (find-namespace-insertion-range))
    (method protected final (find-namespace-insertion-point))
    (method protected final (filter-existing-import-invoices units))
    (method protected final (find-import))
    (method protected final (enter-import))
    (method protected final (find-import-invoice unit ordered-insert? (parameter (unspecified))))
    (method public final (insert-import-invoice unit (parameter (unspecified))))
    (method public final (remove-import-invoice unit))
    (method protected override (find-named-walker name))
    (method protected final (walk-proclaim context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-properties context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-attributes context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-state context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-definition context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-specialize context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-class context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-interface context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-remotable-stub context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-submodule context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method public final (walk-method context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-keywords/properties context expression proc))
    (method protected final (walk-slot-accessor context slot-name declaration doc symbol accessor))
    (method protected final (walk-slot/property-accessors context entry <Lisp-Entry+> slot-name declaration keyword expression doc))
    (method protected final (walk-slot context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-jazzdoc context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-property context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-form context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-global context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-constant context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-enumeration context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-c-enumeration context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-c-named-declare context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-c-include context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-com-external context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-datacontainer context symbol form <Expression-Syntax> declaration keyword expression doc))
    (method protected final (walk-define-handler context symbol form <Expression-Syntax> declaration keyword expression doc))))
