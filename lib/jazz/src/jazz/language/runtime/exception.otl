(module jazz.language.runtime.exception jazz.dialect
  (import (jazz.language.runtime.kernel))
  (import (jazz.language.runtime.format))
  (import (jazz.language.runtime.functional))
  (import (jazz.language.runtime.geometry))
  (import (jazz.language.runtime.object))
  (definition public (get-exception-debugger))
  (definition public (set-exception-debugger exception-debugger))
  (definition public current-exception-debugger)
  (definition package (exception-debugger-hook exc other))
  (definition public (with-exception-debugger exception-debugger thunk))
  (definition public (active-exception-debugger))
  (definition public (system-exception-debugger exc))
  (definition public (with-system-exception-debugger thunk))
  (class Exception extends Object
    (method protected virtual (present-exception))
    (method protected virtual (exception-message))
    (method protected virtual (get-detail))
    (method public virtual (get-message))
    (method public virtual (present-message . rest))
    (method protected override (print output readably)))
  (definition public (exception? obj))
  (class Exception-Detail extends Object
    (slot icon getter generate)
    (slot title getter generate)
    (slot location getter generate)
    (slot children getter generate)
    (method protected override (initialize icon title location children))
    (method protected override (print output readably)))
  (class System-Exception extends Exception
    (slot exception getter generate)
    (method protected override (initialize exception)))
  (definition public (wrap-exception obj))
  (class Break extends Exception
    (slot continue)
    (method protected override (initialize continue)))
  (class Continue extends Exception)
  (class Error extends Exception
    (slot message accessors generate)
    (method protected override (initialize (message: message (unspecified)))))
  (definition public (error? obj))
  (class Read-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method protected override (initialize . rest))
    (method public final (get-range)))
  (class Parse-Error extends Error
    (slot source getter generate)
    (slot start getter generate)
    (slot end getter generate)
    (method protected override (initialize . rest)))
  (class Conversion-Error extends Parse-Error
    (slot object getter generate)
    (slot type getter generate)
    (method protected override (initialize . rest))
    (method protected override (get-message)))
  (class Signal extends Exception)
  (class Cancel-Signal extends Signal)
  (definition public (call-with-catch predicate/type catcher thunk))
  (definition public (throw exception))
  (definition public (error . rest))
  (definition public (disabled-functionality))
  (definition public (must-implement definition-name (what (unspecified))))
  (definition public (warn string . rest))
  (definition public (warn-unimplemented name))
  (definition public (signal signal))
  (definition public (signal-cancel))
  (class Restart extends Object
    (slot name getter generate)
    (slot message getter generate)
    (slot handler getter generate)
    (method protected override (initialize name message handler))
    (method protected override (print output readably)))
  (definition public current-restarts)
  (definition public (with-restart-handler name message handler thunk))
  (definition public (with-restart-catcher name message thunk))
  (definition public (find-restart name))
  (definition public (find-restarts name))
  (definition public (invoke-restart restart . rest))
  (definition public (new-system-thread thunk . rest)))
